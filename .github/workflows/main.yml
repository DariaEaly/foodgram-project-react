name: Django-app workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.11

    - name: Install dependencies
      run: | 
        # обновление pip
        python -m pip install --upgrade pip 
        # установка flake8 и его плагинов
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        # перейти в папку, содержащую зависимости
        cd backend/foodgram/
        # установка зависимостей
        pip install -r requirements.txt 
        # возврат к корневой директории
        cd ../..

  build_and_push_to_docker_hub:
    runs-on: ubuntu-latest
    name: Push Docker image to Docker Hub

    needs: tests
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }} 
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push to Docker Hub backend
            # Пуш образа бэкенда в Docker Hub 
      uses: docker/build-push-action@v4 
      with:
        file: ./backend/foodgram/Dockerfile
        push: true
        tags: dariaealy/foodgram:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
            rm .env
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
            sudo docker-compose stop
            sudo docker-compose rm backend
            sudo docker-compose up -d 
            sudo docker-compose exec backend python manage.py makemigrations
            sudo docker-compose exec backend python manage.py migrate
            sudo docker-compose exec backend python manage.py collectstatic
